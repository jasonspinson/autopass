{"remainingRequest":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jasonspinson/Desktop/autopass/project/src/components/maps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jasonspinson/Desktop/autopass/project/src/components/maps.vue","mtime":1538929996450},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GmapCustomMarker from 'vue2-gmap-custom-marker';\nimport {gmapApi} from 'vue2-google-maps';\nimport { db } from '../config/db.js';\n\nexport default{\n    data(){\n        return{\n            lastId:1,\n            center:{lat: 45.508, lng: -73.587},\n            markers:[],\n            todofromdb:[],\n        };\n    },\n    firebase: {\n            todofromdb: db.ref('todo')\n            },\n    components:{\n    GmapCustomMarker,\n    },\n    mounted() {\n    this.geolocate();\n    },\n    computed: {\n            google: gmapApi\n        },\n    methods:{\n        geolocate: function() {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.center = {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n                };\n            });\n        },\n        mapRclicked(mouseArgs) {\n            const createdMarker = this.addMarker();\n            createdMarker.position.lat = mouseArgs.latLng.lat();\n            createdMarker.position.lng = mouseArgs.latLng.lng();\n        },\n        addMarker: function addMarker() {\n        this.lastId++;\n        this.markers.push({\n            id: this.lastId,\n            position: {\n            lat: 48.8538302,\n            lng: 2.2982161\n            },\n            opacity: 1,\n            draggable: true,\n            enabled: true,\n            clicked: 0,\n            rightClicked: 0,\n            dragended: 0,\n            ifw: true,\n        });\n        return this.markers[this.markers.length - 1];\n        },\n        opentheinfo(m){\n            if(m.ifw === true){\n                m.ifw = false;\n            }\n            else if(m.ifw === false){\n                m.ifw = true;\n            } \n        }\n    }\n}\n",{"version":3,"sources":["maps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"maps.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row justify-content-center\">\n            <gmap-map id=\"gmap\" :center=\"center\" :zoom=\"12\" style=\"width:100%;  height: 600px;\" @rightclick=\"mapRclicked\">\n                <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :draggable=\"true\" :position=\"m.position\" @click=\"opentheinfo(m)\">\n                    <gmap-info-window :opened=\"m.ifw === true\">\n                        <select class=\"custom-select custom-select-lg\" name=\"todoselect\" id=\"todoselect\">\n                            <option v-for=\"item in todofromdb\" :key=\"item.key\">{{ item.content }}</option>\n                        </select>\n                    </gmap-info-window>\n                </gmap-marker>\n            </gmap-map>\n        </div>\n    </div>\n</template>\n\n<script>\n    import GmapCustomMarker from 'vue2-gmap-custom-marker';\n    import {gmapApi} from 'vue2-google-maps';\n    import { db } from '../config/db.js';\n\n    export default{\n        data(){\n            return{\n                lastId:1,\n                center:{lat: 45.508, lng: -73.587},\n                markers:[],\n                todofromdb:[],\n            };\n        },\n        firebase: {\n                todofromdb: db.ref('todo')\n                },\n        components:{\n        GmapCustomMarker,\n        },\n        mounted() {\n        this.geolocate();\n        },\n        computed: {\n                google: gmapApi\n            },\n        methods:{\n            geolocate: function() {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                    };\n                });\n            },\n            mapRclicked(mouseArgs) {\n                const createdMarker = this.addMarker();\n                createdMarker.position.lat = mouseArgs.latLng.lat();\n                createdMarker.position.lng = mouseArgs.latLng.lng();\n            },\n            addMarker: function addMarker() {\n            this.lastId++;\n            this.markers.push({\n                id: this.lastId,\n                position: {\n                lat: 48.8538302,\n                lng: 2.2982161\n                },\n                opacity: 1,\n                draggable: true,\n                enabled: true,\n                clicked: 0,\n                rightClicked: 0,\n                dragended: 0,\n                ifw: true,\n            });\n            return this.markers[this.markers.length - 1];\n            },\n            opentheinfo(m){\n                if(m.ifw === true){\n                    m.ifw = false;\n                }\n                else if(m.ifw === false){\n                    m.ifw = true;\n                } \n            }\n        }\n    }\n</script>"]}]}