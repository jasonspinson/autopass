{"remainingRequest":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jasonspinson/Desktop/autopass/project/src/components/todolist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jasonspinson/Desktop/autopass/project/src/components/todolist.vue","mtime":1538926696909},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport maps from '@/components/maps.vue'\nimport { db } from '../config/db.js';\n\nexport default {\n    data(){\n        return{\n            newinput:'',\n            cachetodo:{\n                id:'',\n                content:'',\n                iscompleted:'',\n            },\n            visibility:'all',\n            todo:[],\n        }\n    },\n    computed:{\n        filtertodo(){\n            const vm = this;\n            if( this.visibility === 'all'){\n                return vm.todo;\n            }\n            else if( this.visibility === 'undo'){\n                var undo =[];\n                vm.todo.forEach(function(item){\n                    if(!item.iscompleted){\n                        undo.push(item);\n                    }\n                });\n                return undo;\n            }\n            else if( this.visibility === 'completed' ){\n                var completedtodo =[];\n                vm.todo.forEach(function(item){\n                    if(item.iscompleted){\n                        completedtodo.push(item);\n                    }\n                });\n                return completedtodo;\n            }\n        }\n    },\n    firebase: {\n            todo: db.ref('todo')\n            },\n    components:{\n        maps,\n    },\n    methods:{\n        addtotodolist(){\n            const vm = this\n            var inputvalue = vm.newinput;\n            var timestamp = Math.floor(Date.now());\n            console.log(inputvalue,timestamp);\n            this.$firebaseRefs.todo.push({\n                id:timestamp,\n                content:inputvalue,\n                iscompleted:false,\n            });\n        },\n        deletetodo(item){\n            ///操控資料庫刪除請用remove\n            this.$firebaseRefs.todo.child(item['.key']).remove();\n            console.log(\"delete success\");\n        },\n        edittodo(item){\n            const vm = this;\n            console.log(item);\n            vm.cachetodo = item;\n            vm.cachetodo.id = item.id;\n            vm.cachetodo.content = item.content;\n            vm.cachetodo.iscompleted = item.iscompleted;\n        },\n        savefromedit(item){\n            const vm = this;\n            vm.cachetodo.content = item.content;\n            const copy = {\n                id:item.id,\n                content:item.content,\n                iscompleted:item.iscompleted,\n            }\n            // remove the .key attribute\n            delete copy['.key'];\n            this.$firebaseRefs.todo.child(item['.key']).set(copy);\n            vm.cachetodo={};\n            console.log('update content success',this.$firebaseRefs.todo.child(item['.key']))\n        },\n        updatecompleted(item){\n            if( item.iscompleted === false ){\n                item.iscompleted = true;\n            }\n            else{\n                item.iscompleted = false;\n            }\n            const update = {\n                id:item.id,\n                content:item.content,\n                iscompleted:item.iscompleted,\n            }\n            delete update['.key'];\n            this.$firebaseRefs.todo.child(item['.key']).set(update);\n            console.log('update completed option success',this.$firebaseRefs.todo.child(item['.key']))\n        },\n    }\n}\n",{"version":3,"sources":["todolist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"todolist.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"container-fluid bg-color\">\n            <div class=\"row justify-content-center py-1\">\n                <div class=\"col-md-8\">\n                    <h2 class=\"text-center\">Todo List 待辦事項</h2>\n                </div>\n            </div>\n            <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 py-2\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" v-model=\"newinput\" placeholder=\"請輸入待辦事項\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-secondary\" type=\"button\" @click.prevent=\"addtotodolist()\">新增</button>\n                        </div>\n                    </div>\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-6 text-center\">\n                            <button class=\"btn btn-secondary mr-3\" @click=\"visibility ='all'\">全部項目</button>\n                            <button class=\"btn btn-secondary mr-3\" @click=\"visibility = 'undo'\">進行中</button>\n                            <button class=\"btn btn-secondary\" @click=\"visibility = 'completed'\">已完成</button>\n                        </div>\n                    </div>\n                    <ul class=\"list-group my-2 text-color-listitem\">\n                        <li class=\"list-group-item\" v-for=\"(i,index) in filtertodo\" :key=\"index\">\n                            <div class=\"d-flex\" v-if=\"i.id !== cachetodo.id\">\n                                <div class=\"form-check\">\n                                    <input class=\"form-check-input position-static\" type=\"checkbox\" v-model=\"i.iscompleted\" @click=\"updatecompleted(i)\">\n                                </div>\n                                    <label :class=\"{'deleteline': i.iscompleted === true}\" class=\"form-check-label\">{{ i.content }}</label>\n                                    <div class=\"ml-auto\">\n                                        <button class=\"btn btn-outline-secondary mr-2\" @click.prevent=\"edittodo(i)\">\n                                            編輯\n                                        </button>\n                                        <button class=\"btn btn-outline-secondary\" @click.prevent=\"deletetodo(i)\">\n                                            刪除\n                                        </button>\n                                    </div>\n                            </div>\n                            <div class=\"input-group\" v-if=\"i.id === cachetodo.id\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"請輸入待辦事項\" v-model=\"cachetodo.content\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-secondary\" type=\"button\" @click.prevent=\"savefromedit(i)\">儲存</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-md-10 text-center mt-2 text-white\">\n                        <p>點擊滑鼠右鍵可以添加標記唷，並選擇你要完成的待辦事項！</p> \n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <maps></maps>\n    </div>\n</template>\n\n<script>\n    import maps from '@/components/maps.vue'\n    import { db } from '../config/db.js';\n\n    export default {\n        data(){\n            return{\n                newinput:'',\n                cachetodo:{\n                    id:'',\n                    content:'',\n                    iscompleted:'',\n                },\n                visibility:'all',\n                todo:[],\n            }\n        },\n        computed:{\n            filtertodo(){\n                const vm = this;\n                if( this.visibility === 'all'){\n                    return vm.todo;\n                }\n                else if( this.visibility === 'undo'){\n                    var undo =[];\n                    vm.todo.forEach(function(item){\n                        if(!item.iscompleted){\n                            undo.push(item);\n                        }\n                    });\n                    return undo;\n                }\n                else if( this.visibility === 'completed' ){\n                    var completedtodo =[];\n                    vm.todo.forEach(function(item){\n                        if(item.iscompleted){\n                            completedtodo.push(item);\n                        }\n                    });\n                    return completedtodo;\n                }\n            }\n        },\n        firebase: {\n                todo: db.ref('todo')\n                },\n        components:{\n            maps,\n        },\n        methods:{\n            addtotodolist(){\n                const vm = this\n                var inputvalue = vm.newinput;\n                var timestamp = Math.floor(Date.now());\n                console.log(inputvalue,timestamp);\n                this.$firebaseRefs.todo.push({\n                    id:timestamp,\n                    content:inputvalue,\n                    iscompleted:false,\n                });\n            },\n            deletetodo(item){\n                ///操控資料庫刪除請用remove\n                this.$firebaseRefs.todo.child(item['.key']).remove();\n                console.log(\"delete success\");\n            },\n            edittodo(item){\n                const vm = this;\n                console.log(item);\n                vm.cachetodo = item;\n                vm.cachetodo.id = item.id;\n                vm.cachetodo.content = item.content;\n                vm.cachetodo.iscompleted = item.iscompleted;\n            },\n            savefromedit(item){\n                const vm = this;\n                vm.cachetodo.content = item.content;\n                const copy = {\n                    id:item.id,\n                    content:item.content,\n                    iscompleted:item.iscompleted,\n                }\n                // remove the .key attribute\n                delete copy['.key'];\n                this.$firebaseRefs.todo.child(item['.key']).set(copy);\n                vm.cachetodo={};\n                console.log('update content success',this.$firebaseRefs.todo.child(item['.key']))\n            },\n            updatecompleted(item){\n                if( item.iscompleted === false ){\n                    item.iscompleted = true;\n                }\n                else{\n                    item.iscompleted = false;\n                }\n                const update = {\n                    id:item.id,\n                    content:item.content,\n                    iscompleted:item.iscompleted,\n                }\n                delete update['.key'];\n                this.$firebaseRefs.todo.child(item['.key']).set(update);\n                console.log('update completed option success',this.$firebaseRefs.todo.child(item['.key']))\n            },\n        }\n    }\n</script>\n"]}]}