{"remainingRequest":"/Users/jasonspinson/Desktop/autopass/project/node_modules/thread-loader/dist/cjs.js!/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js!/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jasonspinson/Desktop/autopass/project/src/components/maps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jasonspinson/Desktop/autopass/project/src/components/maps.vue","mtime":1538965980677},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GmapCustomMarker from 'vue2-gmap-custom-marker';\nimport { gmapApi } from 'vue2-google-maps';\nimport { db } from '../config/db.js';\nexport default {\n  data: function data() {\n    return {\n      lastId: 1,\n      center: {\n        lat: 45.508,\n        lng: -73.587\n      },\n      markers: [],\n      todofromdb: []\n    };\n  },\n  firebase: {\n    todofromdb: db.ref('todo')\n  },\n  components: {\n    GmapCustomMarker: GmapCustomMarker\n  },\n  mounted: function mounted() {\n    this.geolocate();\n  },\n  computed: {\n    google: gmapApi\n  },\n  methods: {\n    geolocate: function geolocate() {\n      var _this = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    },\n    mapRclicked: function mapRclicked(mouseArgs) {\n      var createdMarker = this.addMarker();\n      createdMarker.position.lat = mouseArgs.latLng.lat();\n      createdMarker.position.lng = mouseArgs.latLng.lng();\n    },\n    addMarker: function addMarker() {\n      this.lastId++;\n      this.markers.push({\n        id: this.lastId,\n        position: {\n          lat: 48.8538302,\n          lng: 2.2982161\n        },\n        opacity: 1,\n        draggable: true,\n        enabled: true,\n        clicked: 0,\n        rightClicked: 0,\n        dragended: 0,\n        ifw: true\n      });\n      return this.markers[this.markers.length - 1];\n    },\n    opentheinfo: function opentheinfo(m) {\n      if (m.ifw === true) {\n        m.ifw = false;\n      } else if (m.ifw === false) {\n        m.ifw = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["maps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAiBA,OAAA,gBAAA,MAAA,yBAAA;AACA,SAAA,OAAA,QAAA,kBAAA;AACA,SAAA,EAAA,QAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CADA;AAEA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,OAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA,EAAA,CAAA,GAAA,CAAA,MAAA;AADA,GATA;AAYA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAZA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,SAAA;AACA,GAjBA;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAlBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA,QADA;AAEA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA;AAFA,SAAA;AAIA,OALA;AAMA,KARA;AASA,IAAA,WATA,uBASA,SATA,EASA;AACA,UAAA,aAAA,GAAA,KAAA,SAAA,EAAA;AACA,MAAA,aAAA,CAAA,QAAA,CAAA,GAAA,GAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA;AACA,MAAA,aAAA,CAAA,QAAA,CAAA,GAAA,GAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA;AACA,KAbA;AAcA,IAAA,SAAA,EAAA,SAAA,SAAA,GAAA;AACA,WAAA,MAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,EAAA,EAAA,KAAA,MADA;AAEA,QAAA,QAAA,EAAA;AACA,UAAA,GAAA,EAAA,UADA;AAEA,UAAA,GAAA,EAAA;AAFA,SAFA;AAMA,QAAA,OAAA,EAAA,CANA;AAOA,QAAA,SAAA,EAAA,IAPA;AAQA,QAAA,OAAA,EAAA,IARA;AASA,QAAA,OAAA,EAAA,CATA;AAUA,QAAA,YAAA,EAAA,CAVA;AAWA,QAAA,SAAA,EAAA,CAXA;AAYA,QAAA,GAAA,EAAA;AAZA,OAAA;AAcA,aAAA,KAAA,OAAA,CAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,KA/BA;AAgCA,IAAA,WAhCA,uBAgCA,CAhCA,EAgCA;AACA,UAAA,CAAA,CAAA,GAAA,KAAA,IAAA,EAAA;AACA,QAAA,CAAA,CAAA,GAAA,GAAA,KAAA;AACA,OAFA,MAGA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,EAAA;AACA,QAAA,CAAA,CAAA,GAAA,GAAA,IAAA;AACA;AACA;AAvCA;AArBA,CAAA","sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row justify-content-center\">\n            <gmap-map id=\"gmap\" :center=\"center\" :zoom=\"12\" style=\"width:100%;  height: 600px;\" @rightclick=\"mapRclicked\">\n                <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :draggable=\"true\" :position=\"m.position\" @click=\"opentheinfo(m)\">\n                    <gmap-info-window :opened=\"m.ifw === true\">\n                        <select class=\"custom-select custom-select-lg\" name=\"todoselect\" id=\"todoselect\">\n                            <option v-for=\"item in todofromdb\" :key=\"item.key\">{{ item.content }}</option>\n                        </select>\n                    </gmap-info-window>\n                </gmap-marker>\n            </gmap-map>\n        </div>\n    </div>\n</template>\n\n<script>\n    import GmapCustomMarker from 'vue2-gmap-custom-marker';\n    import {gmapApi} from 'vue2-google-maps';\n    import { db } from '../config/db.js';\n\n    export default{\n        data(){\n            return{\n                lastId:1,\n                center:{lat: 45.508, lng: -73.587},\n                markers:[],\n                todofromdb:[],\n            };\n        },\n        firebase: {\n                todofromdb: db.ref('todo')\n                },\n        components:{\n        GmapCustomMarker,\n        },\n        mounted() {\n        this.geolocate();\n        },\n        computed: {\n                google: gmapApi\n            },\n        methods:{\n            geolocate: function() {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                    };\n                });\n            },\n            mapRclicked(mouseArgs) {\n                const createdMarker = this.addMarker();\n                createdMarker.position.lat = mouseArgs.latLng.lat();\n                createdMarker.position.lng = mouseArgs.latLng.lng();\n            },\n            addMarker: function addMarker() {\n            this.lastId++;\n            this.markers.push({\n                id: this.lastId,\n                position: {\n                lat: 48.8538302,\n                lng: 2.2982161\n                },\n                opacity: 1,\n                draggable: true,\n                enabled: true,\n                clicked: 0,\n                rightClicked: 0,\n                dragended: 0,\n                ifw: true,\n            });\n            return this.markers[this.markers.length - 1];\n            },\n            opentheinfo(m){\n                if(m.ifw === true){\n                    m.ifw = false;\n                }\n                else if(m.ifw === false){\n                    m.ifw = true;\n                } \n            }\n        }\n    }\n</script>"],"sourceRoot":"src/components"}]}