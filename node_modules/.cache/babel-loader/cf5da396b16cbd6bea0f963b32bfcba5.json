{"remainingRequest":"/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js!/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jasonspinson/Desktop/autopass/project/node_modules/vue2-gmap-custom-marker/gmap-custom-marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue2-gmap-custom-marker/gmap-custom-marker.vue","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/cache-loader/dist/cjs.js","mtime":1538640632416},{"path":"/Users/jasonspinson/Desktop/autopass/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/jasonspinson/Desktop/autopass/project/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _inherits from \"/Users/jasonspinson/Desktop/autopass/project/node_modules/@babel/runtime/helpers/builtin/es6/inherits\";\nimport _createClass from \"/Users/jasonspinson/Desktop/autopass/project/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasonspinson/Desktop/autopass/project/node_modules/@babel/runtime/helpers/builtin/es6/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasonspinson/Desktop/autopass/project/node_modules/@babel/runtime/helpers/builtin/es6/getPrototypeOf\";\nimport \"core-js/modules/es6.number.constructor\";\n//\nimport * as VueGoogleMaps from 'vue2-google-maps';\nexport default {\n  mixins: [VueGoogleMaps.MapElementMixin],\n  props: {\n    delayRepaint: {\n      type: Number,\n      default: undefined\n    },\n    marker: {\n      type: Object,\n      default: undefined\n    },\n    offsetX: {\n      type: Number,\n      default: 0\n    },\n    offsetY: {\n      type: Number,\n      default: 0\n    },\n    alignment: {\n      type: String,\n      default: \"top\"\n    }\n  },\n  data: function data() {\n    return {\n      opacity: 0.01\n    };\n  },\n  watch: {\n    marker: function marker(val) {\n      var _this = this;\n\n      this.$mapPromise.then(function (map) {\n        return _this.$overlay.setPosition();\n      });\n    }\n  },\n  provide: function provide() {\n    var _this2 = this;\n\n    var self = this;\n    this.$mapPromise.then(function (map) {\n      var Overlay =\n      /*#__PURE__*/\n      function (_google$maps$OverlayV) {\n        function Overlay(map) {\n          var _this3;\n\n          _classCallCheck(this, Overlay);\n\n          _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Overlay).call(this));\n\n          _this3.setMap(map);\n\n          _this3.draw = function () {\n            return _this3.repaint();\n          };\n\n          _this3.setPosition = function () {\n            return _this3.repaint();\n          };\n\n          return _this3;\n        }\n\n        _createClass(Overlay, [{\n          key: \"repaint\",\n          value: function repaint() {\n            var div = self.$el;\n            var projection = this.getProjection();\n\n            if (projection && div) {\n              var posPixel = projection.fromLatLngToDivPixel(self.position);\n              var x, y;\n\n              switch (self.alignment) {\n                case \"top\":\n                  x = posPixel.x - div.offsetWidth / 2;\n                  y = posPixel.y - div.offsetHeight;\n                  break;\n\n                case \"bottom\":\n                  x = posPixel.x - div.offsetWidth / 2;\n                  y = posPixel.y;\n                  break;\n\n                case \"left\":\n                  x = posPixel.x - div.offsetWidth;\n                  y = posPixel.y - div.offsetHeight / 2;\n                  break;\n\n                case \"right\":\n                  x = posPixel.x;\n                  y = posPixel.y - div.offsetHeight / 2;\n                  break;\n\n                case \"center\":\n                  x = posPixel.x - div.offsetWidth / 2;\n                  y = posPixel.y - div.offsetHeight / 2;\n                  break;\n\n                case \"topleft\":\n                case \"lefttop\":\n                  x = posPixel.x - div.offsetWidth;\n                  y = posPixel.y - div.offsetHeight;\n                  break;\n\n                case \"topright\":\n                case \"righttop\":\n                  x = posPixel.x;\n                  y = posPixel.y - div.offsetHeight;\n                  break;\n\n                case \"bottomleft\":\n                case \"leftop\":\n                  x = posPixel.x - div.offsetWidth;\n                  y = posPixel.y;\n                  break;\n\n                case \"bottomright\":\n                case \"rightbottom\":\n                  x = posPixel.x;\n                  y = posPixel.y;\n                  break;\n\n                default:\n                  throw new Error(\"Invalid alignment type of custom marker!\");\n                  break;\n              }\n\n              div.style.left = x + self.offsetX + 'px';\n              div.style.top = y + self.offsetY + 'px';\n            }\n          }\n        }, {\n          key: \"onAdd\",\n          value: function onAdd() {\n            var div = self.$el;\n            var panes = this.getPanes();\n            div.style.position = 'absolute';\n            div.style.display = 'inline-block';\n            div.style.zIndex = 50;\n            panes.overlayLayer.appendChild(div);\n            panes.overlayMouseTarget.appendChild(div);\n          }\n        }, {\n          key: \"onRemove\",\n          value: function onRemove() {\n            self.$el.remove();\n          }\n        }]);\n\n        _inherits(Overlay, _google$maps$OverlayV);\n\n        return Overlay;\n      }(google.maps.OverlayView);\n\n      _this2.$overlay = new Overlay(map);\n\n      if (_this2.delayRepaint) {\n        setTimeout(function () {\n          _this2.$overlay.repaint();\n\n          _this2.opacity = 1;\n        }, _this2.delayRepaint);\n      } else {\n        _this2.opacity = 1;\n      }\n    });\n  },\n  computed: {\n    lat: function lat() {\n      return parseFloat(this.marker.lat || this.marker.latitude);\n    },\n    lng: function lng() {\n      return parseFloat(this.marker.lng || this.marker.longitude);\n    },\n    position: function position() {\n      var self = this;\n      return {\n        lat: function lat() {\n          return self.lat;\n        },\n        lng: function lng() {\n          return self.lng;\n        }\n      };\n    }\n  },\n  destroyed: function destroyed() {\n    this.$overlay.setMap(null);\n    this.$overlay = undefined;\n  }\n};",{"version":3,"sources":["gmap-custom-marker.vue"],"names":[],"mappings":"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","sourcesContent":["<template><div :style=\"{opacity: opacity}\"><slot/></div></template>\n<script>\nimport * as VueGoogleMaps from 'vue2-google-maps'\nexport default {\n  mixins: [VueGoogleMaps.MapElementMixin],\n  props: {\n    delayRepaint: {\n      type: Number,\n      default: undefined\n    },\n    marker: {\n      type: Object,\n      default: undefined\n    },\n    offsetX: {\n      type: Number,\n      default: 0\n    },\n    offsetY: {\n      type: Number,\n      default: 0\n    },\n    alignment: {\n      type: String,\n      default: \"top\"\n    }\n  },\n  data () {\n    return {\n      opacity: 0.01\n    }\n  },\n  watch: {\n    marker (val) {\n      this.$mapPromise.then(map => this.$overlay.setPosition())\n    },\n  },\n  provide () {\n    const self = this\n    this.$mapPromise.then(map => {\n      class Overlay extends google.maps.OverlayView {\n        constructor (map) {\n          super()\n          this.setMap(map)\n          this.draw = () => this.repaint()\n          this.setPosition = () => this.repaint()\n        }\n        repaint () {\n          const div = self.$el\n          const projection = this.getProjection()\n          if (projection && div) {\n            const posPixel = projection.fromLatLngToDivPixel(self.position)\n            let x, y\n            switch (self.alignment) {\n              case \"top\":\n                x = posPixel.x - (div.offsetWidth / 2)\n                y = posPixel.y - div.offsetHeight\n                break\n              case \"bottom\":\n                x = posPixel.x - (div.offsetWidth / 2)\n                y = posPixel.y\n                break\n              case \"left\":\n                x = posPixel.x - div.offsetWidth\n                y = posPixel.y - (div.offsetHeight / 2)\n                break\n              case \"right\":\n                x = posPixel.x\n                y = posPixel.y - (div.offsetHeight / 2)\n                break\n              case \"center\":\n                x = posPixel.x - (div.offsetWidth / 2)\n                y = posPixel.y - (div.offsetHeight / 2)\n                break\n              case \"topleft\":\n              case \"lefttop\":\n                x = posPixel.x - div.offsetWidth\n                y = posPixel.y - div.offsetHeight\n                break\n              case \"topright\":\n              case \"righttop\":\n                x = posPixel.x\n                y = posPixel.y - div.offsetHeight\n                break\n              case \"bottomleft\":\n              case \"leftop\":\n                x = posPixel.x - div.offsetWidth\n                y = posPixel.y\n                break\n              case \"bottomright\":\n              case \"rightbottom\":\n                x = posPixel.x\n                y = posPixel.y\n                break\n              default:\n                throw new Error(\"Invalid alignment type of custom marker!\")\n                break\n              }\n            div.style.left = (x + self.offsetX) + 'px'\n            div.style.top = (y + self.offsetY) + 'px'\n          }\n        }\n        onAdd () {\n          const div = self.$el\n          const panes = this.getPanes()\n          div.style.position = 'absolute'\n          div.style.display = 'inline-block'\n          div.style.zIndex = 50\n          panes.overlayLayer.appendChild(div)\n          panes.overlayMouseTarget.appendChild(div)\n        }\n        onRemove () {\n          self.$el.remove()\n        }\n      }\n      this.$overlay = new Overlay(map)\n      if (this.delayRepaint) {\n        setTimeout(() => {\n          this.$overlay.repaint()\n          this.opacity = 1\n        }, this.delayRepaint)\n      } else {\n        this.opacity = 1\n      }\n    })\n  },\n  computed: {\n    lat () {\n      return parseFloat(this.marker.lat || this.marker.latitude)\n    },\n    lng () {\n      return parseFloat(this.marker.lng || this.marker.longitude)\n    },\n    position () {\n      const self = this\n      return {\n        lat () {\n          return self.lat\n        },\n        lng () {\n          return self.lng\n        }\n      }\n    }\n  },\n  destroyed () {\n    this.$overlay.setMap(null)\n    this.$overlay = undefined\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue2-gmap-custom-marker"}]}